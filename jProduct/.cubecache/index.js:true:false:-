{"queryPath":"/index.js","absPath":"/Users/caoyanling/Desktop/companyProject/screen/jProduct/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n\nrequire('./swiper.min.css');\nrequire('./index.css');\nvar Swiper = require('./swiper');\n//var Chart = require('XXX');\n/**\n * swiper\n * */\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    //this.chart = new Chart(this.container[0], this.config);\n    //4.如果有需要, 更新样式\n    \n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    //如果有需要的话,更新样式\n    let that = this;\n    var html = `<div id=\"jProjectSwiper\" style=\"height:100%;\"><div class=\"swiper-container\"><div class=\"swiper-wrapper\">`\n      for(var i =0;i<data.length;i++){\n      \n        html+=`<div class=\"swiper-slide\" eventId=\"${data[i][\"accountId\"]}\">`\n        html+= `<img class=\"eventCover\" src=\"${data[i][\"icon\"]}\" />`\n\n        if(data[i][\"accountName\"].length > 10){\n          html+= `<p class=\"eventName\">${data[i][\"accountName\"].substr(0,10)}...</p>`\n        }else{\n          html+= `<p class=\"eventName\">${data[i][\"accountName\"]}</p>`\n        }\n        \n        if(data[i][\"title\"].length >55 ){\n          html+= `<p class=\"eventSummary\">${data[i][\"title\"].substr(0,55)}...</p>`\n        }else{\n          html+= `<p class=\"eventSummary\">${data[i][\"title\"]}</p>`\n        }\n        \n        if(data[i][\"releaseTime\"].indexOf('00:00:00') !== -1){\n          html+= `<p class=\"eventTime\">${data[i][\"releaseTime\"].substr(0,10)}</p>`\n        }else{\n          html+= `<p class=\"eventTime\">${data[i][\"releaseTime\"]}</p>`\n        }\n        html+=`</div>`\n      }\n    html+= `</div></div></div>`\n       \n\n    this.container.html(html);\n\n    new Swiper('#jProjectSwiper .swiper-container', {\n      slidesPerView: 4,\n      spaceBetween: 10,\n      // slidesPerGroup:4, //三个一组\n      // centeredSlides: true, //第一个hover\n      direction: 'vertical',\n      autoplay: true,\n      loop: true,\n      mousewheel:true,\n      pagination: {\n        el: '.swiper-pagination',\n        clickable: true,\n      },\n      on:{\n        slideChangeTransitionStart: function(){\n          var eventId = $(\"#jProjectSwiper .swiper-slide-active\").attr(\"eventId\");\n          for(var i = 0;i<data.length;i++){\n            if(eventId == data[i][\"eventId\"]){\n              console.log(eventId)\n              that.emit('rollEvent', {item:data[i]});\n            }\n          }\n        },\n      },\n    });\n\n   \n    //更新图表\n    //this.chart.render(data, cfg);\n    this.updateStyle();\n    \n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    //this.chart.render({\n    //  width: width,\n    //  height: height\n    //})\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n    \n  },\n  \n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"'use strict';\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n\nrequire('./swiper.min.css');\nrequire('./index.css');\nvar Swiper = require('./swiper');\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n  },\n\n  render: function render(data, config) {\n    data = this.data(data);\n\n    var that = this;\n    var html = '<div id=\"jProjectSwiper\" style=\"height:100%;\"><div class=\"swiper-container\"><div class=\"swiper-wrapper\">';\n    for (var i = 0; i < data.length; i++) {\n\n      html += '<div class=\"swiper-slide\" eventId=\"' + data[i][\"accountId\"] + '\">';\n      html += '<img class=\"eventCover\" src=\"' + data[i][\"icon\"] + '\" />';\n\n      if (data[i][\"accountName\"].length > 10) {\n        html += '<p class=\"eventName\">' + data[i][\"accountName\"].substr(0, 10) + '...</p>';\n      } else {\n        html += '<p class=\"eventName\">' + data[i][\"accountName\"] + '</p>';\n      }\n\n      if (data[i][\"title\"].length > 55) {\n        html += '<p class=\"eventSummary\">' + data[i][\"title\"].substr(0, 55) + '...</p>';\n      } else {\n        html += '<p class=\"eventSummary\">' + data[i][\"title\"] + '</p>';\n      }\n\n      if (data[i][\"releaseTime\"].indexOf('00:00:00') !== -1) {\n        html += '<p class=\"eventTime\">' + data[i][\"releaseTime\"].substr(0, 10) + '</p>';\n      } else {\n        html += '<p class=\"eventTime\">' + data[i][\"releaseTime\"] + '</p>';\n      }\n      html += '</div>';\n    }\n    html += '</div></div></div>';\n\n    this.container.html(html);\n\n    new Swiper('#jProjectSwiper .swiper-container', {\n      slidesPerView: 4,\n      spaceBetween: 10,\n\n      direction: 'vertical',\n      autoplay: true,\n      loop: true,\n      mousewheel: true,\n      pagination: {\n        el: '.swiper-pagination',\n        clickable: true\n      },\n      on: {\n        slideChangeTransitionStart: function slideChangeTransitionStart() {\n          var eventId = $(\"#jProjectSwiper .swiper-slide-active\").attr(\"eventId\");\n          for (var i = 0; i < data.length; i++) {\n            if (eventId == data[i][\"eventId\"]) {\n              console.log(eventId);\n              that.emit('rollEvent', { item: data[i] });\n            }\n          }\n        }\n      }\n    });\n\n    this.updateStyle();\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/swiper.min.css\", \"/index.css\", \"/swiper.js\"], function (module, exports, require, load, process, global) {\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n\n  require('/swiper.min.css', '');\n  require('/index.css', '');\n  var Swiper = require('/swiper.js');\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n    },\n\n    render: function render(data, config) {\n      data = this.data(data);\n\n      var that = this;\n      var html = '<div id=\"jProjectSwiper\" style=\"height:100%;\"><div class=\"swiper-container\"><div class=\"swiper-wrapper\">';\n      for (var i = 0; i < data.length; i++) {\n\n        html += '<div class=\"swiper-slide\" eventId=\"' + data[i][\"accountId\"] + '\">';\n        html += '<img class=\"eventCover\" src=\"' + data[i][\"icon\"] + '\" />';\n\n        if (data[i][\"accountName\"].length > 10) {\n          html += '<p class=\"eventName\">' + data[i][\"accountName\"].substr(0, 10) + '...</p>';\n        } else {\n          html += '<p class=\"eventName\">' + data[i][\"accountName\"] + '</p>';\n        }\n\n        if (data[i][\"title\"].length > 55) {\n          html += '<p class=\"eventSummary\">' + data[i][\"title\"].substr(0, 55) + '...</p>';\n        } else {\n          html += '<p class=\"eventSummary\">' + data[i][\"title\"] + '</p>';\n        }\n\n        if (data[i][\"releaseTime\"].indexOf('00:00:00') !== -1) {\n          html += '<p class=\"eventTime\">' + data[i][\"releaseTime\"].substr(0, 10) + '</p>';\n        } else {\n          html += '<p class=\"eventTime\">' + data[i][\"releaseTime\"] + '</p>';\n        }\n        html += '</div>';\n      }\n      html += '</div></div></div>';\n\n      this.container.html(html);\n\n      new Swiper('#jProjectSwiper .swiper-container', {\n        slidesPerView: 4,\n        spaceBetween: 10,\n\n        direction: 'vertical',\n        autoplay: true,\n        loop: true,\n        mousewheel: true,\n        pagination: {\n          el: '.swiper-pagination',\n          clickable: true },\n\n        on: {\n          slideChangeTransitionStart: function slideChangeTransitionStart() {\n            var eventId = $(\"#jProjectSwiper .swiper-slide-active\").attr(\"eventId\");\n            for (var i = 0; i < data.length; i++) {\n              if (eventId == data[i][\"eventId\"]) {\n                console.log(eventId);\n                that.emit('rollEvent', { item: data[i] });\n              }\n            }\n          } } });\n\n\n\n      this.updateStyle();\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1592004178321,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/swiper.min.css","/index.css","/swiper.js"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/swiper.min.css","/index.css","/swiper.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":48,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":67,"end":75,"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":94,"end":102,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":114,"end":132,"loc":{"start":{"line":7,"column":8},"end":{"line":7,"column":26}},"extra":{"rawValue":"./swiper.min.css","raw":"'./swiper.min.css'"},"value":"/swiper.min.css"},{"type":"StringLiteral","start":143,"end":156,"loc":{"start":{"line":8,"column":8},"end":{"line":8,"column":21}},"extra":{"rawValue":"./index.css","raw":"'./index.css'"},"value":"/index.css"},{"type":"StringLiteral","start":180,"end":190,"loc":{"start":{"line":9,"column":21},"end":{"line":9,"column":31}},"extra":{"rawValue":"./swiper","raw":"'./swiper'"},"value":"/swiper.js"}]}